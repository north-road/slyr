name: Test plugin

on:
  push:
    paths:
    - "slyr_community/**"
    - ".github/workflows/test_plugin.yaml"
  pull_request:
    paths:
    - "slyr_community/**"
    - ".github/workflows/test_plugin.yaml"

env:
  # plugin name/directory where the code for the plugin is stored
  PLUGIN_NAME: slyr_community
  # python notation to test running inside plugin
  TESTS_RUN_FUNCTION: slyr_community.test_suite.test_package
  # Docker settings
  DOCKER_IMAGE: qgis/qgis


jobs:

  Test-plugin-slyr_community:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        docker_tags: [release-3_22, release-3_28, latest]

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker pull and create qgis-testing-environment
        run: |
          docker pull "$DOCKER_IMAGE":${{ matrix.docker_tags }}
          docker run -d --name qgis-testing-environment -v "$GITHUB_WORKSPACE":/tests_directory -e DISPLAY=:99 "$DOCKER_IMAGE":${{ matrix.docker_tags }}

      - name: Docker set up QGIS
        run: |
          docker exec qgis-testing-environment sh -c "qgis_setup.sh $PLUGIN_NAME"
          docker exec qgis-testing-environment sh -c "rm -f /root/.local/share/QGIS/QGIS3/profiles/default/python/plugins/$PLUGIN_NAME"
          docker exec qgis-testing-environment sh -c "ln -s /tests_directory/$PLUGIN_NAME /root/.local/share/QGIS/QGIS3/profiles/default/python/plugins/$PLUGIN_NAME"
          docker exec qgis-testing-environment sh -c "pip3 install -r /tests_directory/REQUIREMENTS_TESTING.txt"
          # docker exec qgis-testing-environment sh -c "apt-get update"
          # docker exec qgis-testing-environment sh -c "apt-get install -y python3-pyqt5.qtwebkit"

      - name: Docker run plugin tests
        run: |
          docker exec qgis-testing-environment sh -c "qgis_testrunner.sh $TESTS_RUN_FUNCTION"
